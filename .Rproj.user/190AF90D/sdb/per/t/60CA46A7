{
    "collab_server" : "",
    "contents" : "---\noutput:\n  word_document: default\n  pdf_document: default\n  html_document: default\n---\nDie Tabellen und Abbildungen in dem Word.doc sind noch mit den Vorjahres-Datensatz berechnet. Alles müsste mit den >10.000 Fällen berechnet werden.\n\nAber Achtung ich nehme nur die Fälle mit Ring&Messmer ≥ grad II und auch nur aus den Ländern, die >100 Fälle gemeldet haben (Germany, Austria, Switzerland, Greece, Poland, Spain, France, \nBulgaria, Italy, Ireland).\n\nIn der Exceltabelle im Anhang habe ich schon mit den neuen Zahlen begonnen.\nIch kann allerdings die Korrektur für Multiples Testen in SPSS nicht.\nIch würde auch immer gern wissen, zwischen welchen Gruppen genau ein Unterschied besteht, wenn der Chi² test signifikant ist.\n\nEs sind 2 Abbildungen in dem Manuskript. Hier wäre die Frage, ob Du so ähnliche Abbildungen für die Erwachsenen erstellen kannst?\n\n# Loading the data\n\n```{r set_knitr_chunk_options,echo=FALSE,message=FALSE,warning=FALSE}\n#bibliography: references.bib\n\nrequire(knitr)\nrequire(kfigr)\nrequire(magrittr)\nopts_chunk$set(echo=FALSE,message=FALSE,warning=F,cache = F)#,eval.after='fig.height') # important for making sure the output will be well formatted.\noptions(scipen=9999)\n\n#### Citations\nrequire(bibtex)\nrequire(knitcitations)\n#biblio <- read.bib(\"bib.bibtex\")\ncite_options(citation_format = \"compatibility\", style = \"text\",\n             hyperlink = FALSE, cite.style = \"numeric\", super = FALSE,\n             max.names = 4, longnamesfirst = FALSE, check.entries = FALSE)\n\nrequire(pander)\n#replace.print.methods <- function(PKG_name = \"pander\") {\n#   PKG_methods <- as.character(methods(PKG_name))\n#   print_methods <- gsub(PKG_name, \"print\", PKG_methods)\n#   for(i in seq_along(PKG_methods)) {\n#      f <- eval(parse(text=paste(PKG_name,\":::\", PKG_methods[i], sep = \"\"))) # the new function to use for print\n#      assign(print_methods[i], f, \".GlobalEnv\")\n#   }\n#}\n#replace.print.methods()\n## The following might work with some tweaks:\n## print <- function (x, ...) UseMethod(\"pander\")\n\npanderOptions('table.split.table',Inf)\n\n# Here I read data into R using the function below and save it in a native R format. \n# data <- read.spss(\"/home/wojtek/Documents/anaphylaxis registry/anaphylaxis/anaphylaxis_registry_02_mar_2015_mergedSD.sav\",use.value.labels = TRUE,to.data.frame = T,trim.factor.names = T,trim_values = T) #this loads the databbase from spss file - watch out for errors.\n\n# new database!!!!\n# data <- read.spss(\"/home/wojtek/Documents/anaphylaxis registry/anaphylaxis/anaphylaxis_registry_18_apr_2016_mergedSD.sav\",use.value.labels = TRUE,to.data.frame = T,trim.factor.names = T,trim_values = T) #this loads the databbase from spss file - watch out for errors.\n\n# new database 2017 !!!!\n# library(\"foreign\")\n# data3 <- read.spss(\"/home/wolass/Documents/anaphylaxis/anaphylaxis_registry_20_mar_2017_mergedSD.sav\",use.value.labels = TRUE,to.data.frame = T,trim.factor.names = T,trim_values = T) #this loads the databbase from spss file - watch out for errors.\n\n# save(data3,file = \"data3.R\") # dor database from 2015 choose data.R\nload(\"../anaphylaxis/data3.R\")\n# load(\"data2.R\")\ndata <- data3[,-16]\n# I could make a nice table showing  mistakes in our database. \n# length(which(data$q_111==\"no\"&data$q_111_angioedema==\"unknown\"))\n\n### Here I will introduce functions for database conformity\nfor(i in c(16:55,65,75,178:205,209:220,222:223)){\n  levels(data[,i]) <- c(levels(data[,i])[1:2],NA)  \n}\nfor(i in c(79:83)){\n  levels(data[,i]) <- c(levels(data[,i])[1:2],\"no\")  \n}\nlevels(data$q_421_exercise) <- c(\"no\",\"mild\",\"moderate\",\"vigorous\",NA)\n\nno.of.centers <- length(levels(data$b_centres_id))\nno.of.countries <- length(summary(data$d_centres_country)) - length(which(summary(data$d_centres_country)==0))\n\nno.of.cases <- length(data$b_case_id)\nno.of.patients <- no.of.cases - (length(which(summary(data$b_patient_code)==2)) + length(which(summary(data$b_patient_code)==3)) +length(which(summary(data$b_patient_code)==4)) + length(which(summary(data$b_patient_code)==5)))\n\nno.of.F <- summary(data$b_sex)[1]\nno.of.M <- summary(data$b_sex)[2]\n\n#Check this using the following line\n#summary(as.factor(summary(data$b_patient_code)))\n\n\n##OUTCOMES\ndata$rmr <- data$d_severity_rm\nlevels(data$rmr)<-c(\"I+II\",\"I+II\",\"III+IV\",\"III+IV\")\ndata$rmr2 <- data$d_severity_rm\nlevels(data$rmr2)<-c(\"I+II+III\",\"I+II+III\",\"I+II+III\",\"IV\")\n\n```\n\nRegistered cases `r nrow(data)`\n\n```{r}\ndata.country <- data[data$d_centres_country %in% \n                       c(\"Germany\", \"Austria\", \"Switzerland\", \"Greece\", \"Poland\", \"Spain\", \"France\", \"Bulgaria\", \"Italy\", \"Ireland\"),]\n```\n\nCases after getting rid of some low-reporting countries `r nrow(data.country)`\n\n```{r}\nd.rm <- data.country[which(data.country$d_severity_rm==\"grade II\"|\n                             data.country$d_severity==\"grade III\"|\n                             data.country$d_severity==\"grade IV\"),]\n```\n\nCases with severity of `>= II` `r nrow(d.rm)`\n\n```{r}\nd.ch <- d.rm[which(d.rm$d_age<18),]\nd.ad<- d.rm[which(d.rm$d_age>=18),]\nd.ad.1 <- d.rm[which(d.rm$d_age>=18&d.rm$d_age<=40),]\nd.ad.2 <- d.rm[which(d.rm$d_age>=41&d.rm$d_age<=64),]\nd.ad.3 <- d.rm[which(d.rm$d_age>=65),]\n\n```\n\n\nChildren `r nrow(d.ch)`, adults `r nrow(d.ad)`, \n\nAdults 18-40 = `r nrow(d.ad.1)`\nAdults 41-64 = `r nrow(d.ad.2)`\nElderly >=65 = `r nrow(d.ad.3)`\n\n```{r}\nf.age <-function(x){ if(x>17&x<=40){\n  return(\"young\")\n} else if(x>40&x<=64){\n  return(\"middle\")\n} else if(x>=65){\n  return(\"elderly\")\n} else {\n  return(NA)\n}\n}\n# here we change the d.rm to be oly of adults\nd.rm <- d.ad\n\nd.rm$ages <-sapply(d.rm$d_age,f.age) \n\ntable(d.rm$b_sex,d.rm$ages)\nrequire(rmngb)\npairwise.chisq.test(d.rm$b_sex,d.rm$ages)\n```\n\n# Atopic dermatitis\n```{r}\nd_410_atopic <- rep(\"non-atopic\",nrow(d.rm))\nd_410_atopic[d.rm$q_410_ad_cur==\"yes\"|\n  d.rm$q_410_asthma_cur==\"yes\" |\n  d.rm$q_410_rhinitis_cur==\"yes\"] <- \"atopic\"\n\nd.rm$d_410_atopic <- d_410_atopic\ntable(d.rm$d_410_atopic,d.rm$ages)\npairwise.chisq.test(d.rm$d_410_atopic,d.rm$ages)\n```\n\n# Cardiovascular disease \n\n```{r}\ntable(d.rm$q_410_cardio_cur,d.rm$ages)\npairwise.chisq.test(d.rm$q_410_cardio_cur,d.rm$ages)\n```\n\n# Mastocytosis\n\n```{r}\ntable(d.rm$q_410_masto_cur,d.rm$ages)\npairwise.chisq.test(d.rm$q_410_masto_cur,d.rm$ages)\n```\n\n# Thyroid disease \n\n```{r}\ntable(d.rm$q_410_thyroid_cur,d.rm$ages)\npairwise.chisq.test(d.rm$q_410_thyroid_cur,d.rm$ages)\n```\n\n# Physical exercise \n\n```{r}\ntable(d.rm$q_421_exercise,d.rm$ages)\npairwise.chisq.test(d.rm$q_421_exercise,d.rm$ages)\n```\n\n# Psychological stress\n\n```{r}\ntable(d.rm$q_422_stress,d.rm$ages)\npairwise.chisq.test(d.rm$q_422_stress,d.rm$ages)\n```\n\n# Alcohol\n\n```{r}\ntable(d.rm$q_425_alcohol,d.rm$ages)\npairwise.chisq.test(d.rm$q_425_alcohol,d.rm$ages)\n```\n\n# Menstruation\nfrd\n```{r}\ntable(d.rm$q_424_menstruation,d.rm$ages)\npairwise.chisq.test(d.rm$q_424_menstruation,d.rm$ages)\n```\n\nThis variable should not be taken into account I think. The elderly group does not have any menstrruation...\n\n\n# infection\n\n```{r}\ntable(d.rm$q_410_infect_cur,d.rm$ages)\npairwise.chisq.test(d.rm$q_410_infect_cur,d.rm$ages)\n```\n\n# repeated reaction\n\n```{r}\ntable(d.rm$q_160_ever_react,d.rm$ages) \npairwise.chisq.test(d.rm$q_160_ever_react,d.rm$ages)\n```\n\n# Elicitors\n\nTotal\n\n```{r}\nFun <- function(x,selector=rep(TRUE,nrow(d.rm))){\n  a <- table(d.rm[selector,x],d.rm$ages[selector]) \n  b <- pairwise.chisq.test(d.rm[selector,x],d.rm$ages[selector])\n  return(list(c(x),a,b))\n}\nFun(\"q_310_trigger\",selector=rep(TRUE,nrow(d.rm)))\n\n```\n\nElicitor known \n```{r}\nd.rm$elicitor_known<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_known[d.rm$q_310_trigger==\"yes\"] <- \"yes\"\n\nFun(\"elicitor_known\")\n```\n\nElicitor suspected\n```{r}\nd.rm$elicitor_suspected<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_suspected[d.rm$q_310_trigger==\"reasonable suspicion\"] <- \"yes\"\n\nFun(\"elicitor_suspected\")\n```\n\nDrugs \n```{r}\n\nd.rm$elicitor_drug<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_drug[d.rm$d_elicitor_group==\"drug\"] <- \"yes\"\n\nFun(\"elicitor_drug\")\n```\n\nanalgesics\n```{r}\n\nd.rm$elicitor_analg<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_analg[!is.na(d.rm$q_332_analgesic)] <- \"yes\"\nd.rm$elicitor_analg[d.rm$q_332_analgesic==\"no\"] <- \"no\"\n\nFun(\"elicitor_analg\")\n```\n\nantibiotics\n```{r}\n\nd.rm$elicitor_anty<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_anty[!is.na(d.rm$q_331_antibiotics)] <- \"yes\"\nd.rm$elicitor_anty[d.rm$q_331_antibiotics==\"no\"] <- \"no\"\n\nFun(\"elicitor_anty\")\n```\n\n\nLocal anesthetics\n```{r}\nd.rm$elicitor_LA<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_LA[!is.na(d.rm$q_3361_local_anaesthetics_v4)] <- \"yes\"\nd.rm$elicitor_LA[d.rm$q_3361_local_anaesthetics_v4==\"no\"] <- \"no\"\n\nFun(\"elicitor_LA\")\n```\n\n\nx-ray (contrast agent)\n```{r}\nd.rm$elicitor_contrast<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_contrast[!is.na(d.rm$q_335_xray_cm)] <- \"yes\"\nd.rm$elicitor_contrast[d.rm$q_335_xray_cm==\"no\"] <- \"no\"\n\nFun(\"elicitor_contrast\")\n```\n\nPPI\n```{r}\nd.rm$elicitor_ppi<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_ppi[!is.na(d.rm$q_339_ppi_v5)] <- \"yes\"\nd.rm$elicitor_ppi[d.rm$q_339_ppi_v5==\"no\"] <- \"no\"\n\nFun(\"elicitor_ppi\")\n```\n\nCardiovascular drugs\n\nHere the variable `d.rm$q_333_cardio_drugs` was unfortunately not adequate to use. \nI made a new variable `elicitor_cvd` which answered \"yes\" whenever either ACE-I, AT2 or Bebtablockers were used. If neither of these drugs were used in a given patient it resulted in \"no\".\n\n```{r}\nd.rm$elicitor_cvd<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_cvd[d.rm$q_423_ace==\"yes\"] <- \"yes\"\nd.rm$elicitor_cvd[d.rm$q_423_at2==\"yes\"] <- \"yes\"\nd.rm$elicitor_cvd[d.rm$q_423_beta==\"yes\"] <- \"yes\"\nd.rm$elicitor_cvd[!is.na(d.rm$q_333_cardio_drugs)] <- \"yes\"\nd.rm$elicitor_cvd[d.rm$q_333_cardio_drugs==\"no\"] <- \"no\"\n\nFun(\"elicitor_cvd\")\n```\n\nInsects\n```{r}\nd.rm$elicitor_insects<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_insects[!is.na(d.rm$q_340_insects)] <- \"yes\"\nd.rm$elicitor_insects[d.rm$q_340_insects==\"no\"] <- \"no\"\n\nFun(\"elicitor_insects\")\n```\n\nYellow jacket\n```{r}\nd.rm$elicitor_yj<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_yj[d.rm$q_340_insects==\"yellow jacket\"] <- \"yes\"\n\nFun(\"elicitor_yj\")\n```\n\nBee\n```{r}\nd.rm$elicitor_bee<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_bee[d.rm$q_340_insects==\"bee\"] <- \"yes\"\n\nFun(\"elicitor_bee\")\n```\n\nHornet\n```{r}\nd.rm$elicitor_hornet<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_hornet[d.rm$q_340_insects==\"hornet\"] <- \"yes\"\n\nFun(\"elicitor_hornet\")\n```\n\n# Food\n```{r}\nd.rm$elicitor_food<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_food[d.rm$d_elicitor_group==\"food\"] <- \"yes\"\nFun(\"elicitor_food\")\n\nd.rm.f <- d.rm[d.rm$elicitor_food==\"yes\",]\nFun.f <- function(x,selector=rep(TRUE,nrow(d.rm.f))){\n  a <- table(d.rm.f[selector,x],d.rm.f$ages[selector]) \n  b <- pairwise.chisq.test(d.rm.f[selector,x],d.rm.f$ages[selector])\n  return(list(c(x),a,b))\n}\n\n```\n\n## wheat\n```{r}\nd.rm.f$elicitor_wheat<- rep(\"no\",nrow(d.rm.f))\nd.rm.f$elicitor_wheat[d.rm.f$q_324_cereals==\"wheat floar\"] <- \"yes\"\n\nFun.f(\"elicitor_wheat\")\n```\n\n## hazelnut\n```{r}\nd.rm.f$elicitor_HN<- rep(\"no\",nrow(d.rm.f))\nd.rm.f$elicitor_HN[d.rm.f$q_322_treenuts==\"hazelnut\"] <- \"yes\"\n\nFun.f(\"elicitor_HN\")\n```\n\n## soy\n```{r}\nd.rm.f$elicitor_soy<- rep(\"no\",nrow(d.rm.f))\nd.rm.f$elicitor_soy[d.rm.f$q_326_legumes==\"soy\"] <- \"yes\"\n\nFun.f(\"elicitor_soy\")\n```\n\n## celery\n```{r}\nd.rm.f$elicitor_celery<- rep(\"no\",nrow(d.rm.f))\nd.rm.f$elicitor_celery[d.rm.f$q_323_vegetables==\"celery\"] <- \"yes\"\n\nFun.f(\"elicitor_celery\")\n```\n\n## shellfish\n```{r}\nd.rm.f$elicitor_shellfish<- rep(\"no\",nrow(d.rm.f))\nd.rm.f$elicitor_shellfish[d.rm.f$q_325_animal_products%in%\n                          c(\"mussels\",\"snails\",\"shrimp/scampi\",\"crab\",\n                            \"crawfish\",\"spiny lobster\",\"calamari\")] <- \"yes\"\n\nFun.f(\"elicitor_shellfish\")\n```\n\n## peanut\n```{r}\nd.rm.f$elicitor_peanut<- rep(\"no\",nrow(d.rm.f))\nd.rm.f$elicitor_peanut[which(d.rm.f$q_326_legumes==\"peanut\")] <- \"yes\"\n# d.rm$elicitor_peanut <- factor(d.rm$elicitor_peanut)\n\nFun.f(\"elicitor_peanut\")\n```\n\n# Immunotherapy (SIT)\n```{r}\nd.rm$elicitor_SIT<- rep(\"no\",nrow(d.rm))\nd.rm$elicitor_SIT[which(d.rm$d_elicitor_group==\"SIT\")] <- \"yes\"\n# d.rm$elicitor_peanut <- factor(d.rm$elicitor_peanut)\n\nFun(\"elicitor_SIT\")\n```\n\n\n```{r}\nrequire(ggplot2)\nggplot(d.rm[d.rm$d_elicitor_group!=\"insects\",], aes(d_age,fill=d_elicitor_group))+\n  geom_area(stat = 'bin',\n            aes(y=..density..),\n            position = \"stack\",\n            binwidth=9,\n            linetype=1,\n            size =1,\n            colour=\"black\")+\n  scale_fill_brewer(palette=\"Greys\") +\n  theme_classic()+\n  theme(legend.position = c(1,1),legend.justification = c(1,1))+\n  geom_segment(aes(xend=40,x=40,y=0,yend=0.17),linetype=2)+\n  geom_segment(aes(xend=60,x=60,y=0,yend=0.17),linetype=2)\n\n\nggplot(d.rm,aes(x=d_age,y=..count..,fill=d_elicitor_group))+\n  geom_density(position=\"fill\")+\n  theme_bw()+\n  scale_fill_grey(guide=guide_legend(title = \"Elicitor\"))+\n  # guides(fill=guide_legend(reverse=F))+\n  ylab(\"Relative count\")+\n    geom_segment(aes(xend=40,x=40,y=0,yend=1),linetype=2)+\n  geom_segment(aes(xend=60,x=60,y=0,yend=1),linetype=2)\n\n\n```\n\nSo we can do it - the question now is what do we want to display? Food? or any other variables here that may be of interest?\n\nSecond plot - symptoms\n\n## Gastrointestinal\n```{r}\n\nggplot(d.rm[!is.na(d.rm$q_112_vomiting),],aes(x=d_age,y=..count..))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_112_vomiting,linetype=\"1\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_112_abdominal_pain,linetype=\"4\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_112_incontinence,linetype=\"6\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_112_nausea,linetype=\"8\"))+\n  theme_bw()+\n  scale_fill_grey(guide=guide_legend(title = \"Elicitor\"))+\n  # guides(fill=guide_legend(reverse=F))+\n  ylab(\"Relative count\")+\n    geom_segment(aes(xend=40,x=40,y=0,yend=1),linetype=2)+\n  ylim(c(0,0.5))+\n  geom_segment(aes(xend=60,x=60,y=0,yend=1),linetype=2)+\n  guides(color=\"none\",\n         linetype=guide_legend(title = \"Symptom\"))+\n  scale_linetype_manual(values=c(1,4,3,8),\n                        labels=c(\"vomiting\",\n                                   \"abdominal pain\",\n                                   \"incontinence\",\n                                   \"nausea\"))+\n  theme(legend.position = c(0.1,0.99),\n        legend.justification = c(0,1),\n        legend.background = element_rect(fill=\"transparent\"))\n  \n\n```\n\n## Skin\n```{r}\n\nggplot(d.rm[!is.na(d.rm$q_111_erythema_flush_v5),],\n       aes(x=d_age,y=..count..))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_111_angioedema,linetype=\"1\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_111_urticaria,linetype=\"4\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_111_pruritus,linetype=\"6\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_111_erythema_flush_v5,linetype=\"8\"))+\n  theme_bw()+\n  scale_fill_grey(guide=guide_legend(title = \"Elicitor\"))+\n  # guides(fill=guide_legend(reverse=F))+\n  ylab(\"Relative count\")+\n    geom_segment(aes(xend=40,x=40,y=0,yend=1),linetype=2)+\n  ylim(c(0,0.6))+\n  geom_segment(aes(xend=60,x=60,y=0,yend=1),linetype=2)+\n  guides(color=\"none\",\n         linetype=guide_legend(title = \"Symptom\"))+\n  scale_linetype_manual(values=c(1,4,3,8),\n                        labels=c(\"angiooedema\",\n                                   \"urticaria\",\n                                   \"pruritus\",\n                                   \"erythema\"))+\n  theme(legend.position = c(0.1,0.1),\n        legend.justification = c(0,0),\n        legend.background = element_rect(fill=\"transparent\"))\n  \n\n```\n\n## Respiratory \n```{r}\n\nggplot(d.rm[!is.na(d.rm$q_113_wheezing_expiratory_distress_v5),],aes(x=d_age,y=..count..))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_113_dyspnea,linetype=\"1\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_113_wheezing_expiratory_distress_v5,linetype=\"2\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_113_chest_tightness_v5,linetype=\"3\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_113_respiratory_arrest,linetype=\"4\"))+\n  theme_bw()+\n  scale_fill_grey(guide=guide_legend(title = \"Elicitor\"))+\n  # guides(fill=guide_legend(reverse=F))+\n  ylab(\"Relative count\")+\n    geom_segment(aes(xend=40,x=40,y=0,yend=1),linetype=2)+\n  ylim(c(0,0.7))+\n  geom_segment(aes(xend=60,x=60,y=0,yend=1),linetype=2)+\n  guides(color=\"none\",\n         linetype=guide_legend(title = \"Symptom\"))+\n  scale_linetype_manual(values=c(1,4,3,8),\n                        labels=c(\"dyspnea\",\n                                 \"Expiratory distress\",\n                                 \"Chest tightness\",\n                                 \"respiratory arrest\"))+\n  theme(legend.position = c(0.1,0.4),\n        legend.justification = c(0,0),\n        legend.background = element_rect(fill=\"transparent\"))\n```\n\n## Cardiac\n```{r}\nggplot(d.rm[!is.na(d.rm$q_114_loss_of_consciousness),],\n       aes(x=d_age,y=..count..))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_114_dizziness,linetype=\"1\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_114_loss_of_consciousness,linetype=\"2\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_114_cardiac_arrest,linetype=\"3\"))+\n  stat_density(position=\"fill\",geom=\"line\",aes(color=q_114_tachycardia,linetype=\"4\"))+\n  theme_bw()+\n  scale_fill_grey(guide=guide_legend(title = \"Elicitor\"))+\n  # guides(fill=guide_legend(reverse=F))+\n  ylab(\"Relative count\")+\n    geom_segment(aes(xend=40,x=40,y=0,yend=1),linetype=2)+\n  ylim(c(0,0.7))+\n  geom_segment(aes(xend=60,x=60,y=0,yend=1),linetype=2)+\n  guides(color=\"none\",\n         linetype=guide_legend(title = \"Symptom\"))+\n  scale_linetype_manual(values=c(1,4,3,8),\n                        labels=c(\"Dizziness\",\n                                 \"Loss of conciousness\",\n                                 \"Cardiac arrest\",\n                                 \"Tachychardia\"))+\n  theme(legend.position = c(0.1,0.9),\n        legend.justification = c(0,1),\n        legend.background = element_rect(fill=\"transparent\"))\n```\n\n\n\n",
    "created" : 1503061015964.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "751873460",
    "id" : "60CA46A7",
    "lastKnownWriteTime" : 1507905927,
    "last_content_update" : 1507905927200,
    "path" : "~/Documents/elderly paper/Project.Rmd",
    "project_path" : "Project.Rmd",
    "properties" : {
        "docOutlineVisible" : "1",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}